openapi: 3.0.3
info:
    title: FIDO2 API
    description: RESTful API for handling WebAuthn logic with support for FIDO2 flows with passkeys.
    version: "2.0"
servers:
    - url: https://api.loginid.io/fido2/v2
paths:
    /fido2/v2/.well-known/jwks.json:
        get:
            tags:
                - .well-known
            summary: JWKS for auth token validation
            operationId: .well-known#jwks
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WellKnownJwks'
                            example:
                                keys:
                                    - alg: ES256
                                      crv: P-256
                                      key_ops:
                                        - verify
                                      kid: unique-key-id
                                      kty: EC
                                      use: sig
                                      x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                                      "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
                                    - alg: ES256
                                      crv: P-256
                                      key_ops:
                                        - verify
                                      kid: unique-key-id
                                      kty: EC
                                      use: sig
                                      x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                                      "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
                                    - alg: ES256
                                      crv: P-256
                                      key_ops:
                                        - verify
                                      kid: unique-key-id
                                      kty: EC
                                      use: sig
                                      x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                                      "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/complete:
        post:
            tags:
                - auth
            summary: Complete WebAuthn registration
            operationId: auth#authComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCompleteRequestBody'
                        example:
                            assertionResult:
                                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                deviceID: 2a363a42-a397-4af0-b089-0935fc223017
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/init:
        post:
            tags:
                - auth
            summary: Start WebAuthn registration flow
            operationId: auth#authInit
            parameters:
                - name: User-Agent
                  in: header
                  description: Raw user-agent header as set by a browser
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Raw user-agent header as set by a browser
                    example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
                  example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthInitRequestBody'
                        example:
                            app:
                                id: 2a363a42-a397-4af0-b089-0935fc223017
                            deviceInfo:
                                clientName: Chrome
                                clientType: browser
                                clientVersion: 120.0.0.0
                                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                                osArch: aarch64
                                osName: iPhone
                                osVersion: 14.2.1
                                screenHeight: 1080
                                screenWidth: 1920
                            user:
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthInit'
                            example:
                                action: proceed
                                assertionOptions:
                                    allowCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    extensions:
                                        appid: https://loalhost:8443
                                    rpId: https://localhost:8443/
                                    timeout: 5000
                                    userVerification: discouraged
                                crossAuthMethods:
                                    - otp
                                    - otp:sms
                                    - otp:email
                                fallbackMethods:
                                    - ciam
                                passkeyType: device
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/otp:
        post:
            tags:
                - auth
            summary: Request OTP code by an authenticated user
            description: |-
                An authenticated user can request an authentication code directly using this
                method. The code can be used for authentication from another device.
            operationId: auth#authCodeRequest
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthCode'
                            example:
                                code: "123456"
                                expiresAt: "2021-01-01T00:00:00Z"
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - auth:write
    /fido2/v2/auth/otp/email:
        post:
            tags:
                - auth
            summary: Request OTP code to be sent via email.
            description: |-
                Send authentication code to the provided email. The SMS will only be sent
                if the email address is known to the application, however, this method will
                return success regardless.
            operationId: auth#authCodeRequestEmail
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCodeRequestSMSRequestBody'
                        example:
                            user:
                                username: admin@example.com
                                usernameType: email
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/otp/sms:
        post:
            tags:
                - auth
            summary: Request OTP code to be sent via SMS.
            description: |-
                Send authentication code to the provided phone number. The SMS will only be
                sent if the phone is registered with the application, however, it will return
                success regardless.
            operationId: auth#authCodeRequestSMS
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCodeRequestSMSRequestBody'
                        example:
                            user:
                                username: admin@example.com
                                usernameType: email
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/otp/verify:
        post:
            tags:
                - auth
            summary: Verify authentication code and return JWT access token with appropriate scopes
            operationId: auth#authCodeVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCodeVerifyRequestBody'
                        example:
                            authCode: "123456"
                            user:
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                deviceID: 2a363a42-a397-4af0-b089-0935fc223017
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/mgmt/grant:
        post:
            tags:
                - mgmt
            summary: Create an authorization token with requested scopes
            operationId: mgmt#grantCreate
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GrantCreateRequestBody'
                        example:
                            grants:
                                - passkey:read
                                - passkey:write
                                - reg:write
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrantCreateResponseBody'
                            example:
                                token: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/mgmt/token/verify:
        post:
            tags:
                - mgmt
            summary: Validate JWT Access Token
            operationId: mgmt#tokenVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TokenVerifyRequestBody'
                        example:
                            jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/passkeys:
        get:
            tags:
                - passkeys
            summary: List passkeys
            operationId: passkeys#passkeysList
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasskeyCollection'
                            example:
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  credentialSynced: false
                                  device: iPhone SE (2nd Gen)
                                  id: eb385800-d35e-4108-9b49-48010731cd37
                                  name: My Phone
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  credentialSynced: true
                                  device: MacBook Pro (Google Chrome)
                                  id: 1b385800-d35e-4108-9b49-48010731cd37
                                  name: My Laptop
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  credentialSynced: false
                                  device: MacBook Pro
                                  id: ab385800-d35e-4108-9b49-48010731cd37
                                  name: My Tablet
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:read
    /fido2/v2/passkeys/{id}:
        delete:
            tags:
                - passkeys
            summary: Delete passkey
            operationId: passkeys#passkeyDelete
            parameters:
                - name: id
                  in: path
                  description: Internal passkey identifier
                  required: true
                  schema:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:write
        put:
            tags:
                - passkeys
            summary: Rename passkey
            operationId: passkeys#passkeyRename
            parameters:
                - name: id
                  in: path
                  description: Internal passkey identifier
                  required: true
                  schema:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasskeyRenameRequestBody'
                        example:
                            name: My iPhone SE
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:write
    /fido2/v2/profile/{id}:
        delete:
            tags:
                - profile
            summary: Delete a user profile and all associated passkey
            operationId: profile#profileDelete
            parameters:
                - name: id
                  in: path
                  description: Internal user identifier
                  required: true
                  schema:
                    type: string
                    description: Internal user identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            responses:
                "204":
                    description: No Content response.
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/profile/{id}/email:
        post:
            tags:
                - profile
            summary: Update profile email address
            operationId: profile#profileEmailUpdate
            parameters:
                - name: id
                  in: path
                  description: Internal user identifier
                  required: true
                  schema:
                    type: string
                    description: Internal user identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfileEmailUpdateRequestBody'
                        example:
                            email: luke.skywalker@tatuin.com
                            requestVerification: true
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/profile/{id}/phone:
        delete:
            tags:
                - profile
            summary: Delete phone from the profile
            operationId: profile#profilePhoneDelete
            parameters:
                - name: id
                  in: path
                  description: Internal user identifier
                  required: true
                  schema:
                    type: string
                    description: Internal user identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
        post:
            tags:
                - profile
            summary: Update the profile phone number
            operationId: profile#profilePhoneUpdate
            parameters:
                - name: id
                  in: path
                  description: Internal user identifier
                  required: true
                  schema:
                    type: string
                    description: Internal user identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfilePhoneUpdateRequestBody'
                        example:
                            messagingConsent: true
                            phoneNumber: "+14161234567"
                            requestVerification: true
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/profile/email/verify:
        post:
            tags:
                - profile
            summary: Verify phone number with received authorization code
            operationId: profile#profileEmailVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfilePhoneVerifyRequestBody'
                        example:
                            authCode: "123456"
                            username: user@example.com
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/profile/phone/verify:
        post:
            tags:
                - profile
            summary: Verify phone number with received authorization code
            operationId: profile#profilePhoneVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfilePhoneVerifyRequestBody'
                        example:
                            authCode: "123456"
                            username: user@example.com
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/reg/complete:
        post:
            tags:
                - reg
            summary: Complete WebAuthn registration flow
            operationId: reg#regComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegCompleteRequestBody'
                        example:
                            creationResult:
                                attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                                publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                                publicKeyAlgorithm: -8
                                transports:
                                    - hybrid
                                    - cable
                                    - internal
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                deviceID: 2a363a42-a397-4af0-b089-0935fc223017
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/reg/init:
        post:
            tags:
                - reg
            summary: Start WebAuthn registration flow
            operationId: reg#regInit
            parameters:
                - name: User-Agent
                  in: header
                  description: Raw user-agent header as set by a browser
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Raw user-agent header as set by a browser
                    example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
                  example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegInitRequestBody'
                        example:
                            app:
                                id: 2a363a42-a397-4af0-b089-0935fc223017
                            deviceInfo:
                                clientName: Chrome
                                clientType: browser
                                clientVersion: 120.0.0.0
                                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                                osArch: aarch64
                                osName: iPhone
                                osVersion: 14.2.1
                                screenHeight: 1080
                                screenWidth: 1920
                            passkeyOptions:
                                conditionalCreate: false
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            user:
                                displayName: System Administrator
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegInit'
                            example:
                                action: proceed
                                registrationRequestOptions:
                                    attestation: direct
                                    authenticatorSelection:
                                        authenticatorAttachment: platform
                                        requireResidentKey: true
                                        residentKey: required
                                        userVerification: preferred
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    excludeCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    extensions:
                                        appid: https://loalhost:8443
                                    pubKeyCredParams:
                                        - alg: -7
                                          type: public-key
                                        - alg: -257
                                          type: public-key
                                    rp:
                                        id: api.loginid.io
                                        name: Login ID Inc.
                                    timeout: 10000
                                    user:
                                        displayName: System Administrator
                                        id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                                        name: admin
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnauthorizedError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - reg:write
    /fido2/v2/tx/complete:
        post:
            tags:
                - tx
            summary: Complete transaction confirmation
            operationId: tx#txComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TxCompleteRequestBody'
                        example:
                            authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                            clientData: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            keyHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TxComplete'
                            example:
                                authCred:
                                    createdAt: 2023-06-15 13:29:41 EDT
                                    credentialSynced: true
                                    device: iPhone SE
                                    id: eb385800-d35e-4108-9b49-48010731cd37
                                    name: My Phone
                                credentialId: 2a363a42-a397-4af0-b089-0935fc223017
                                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ForbiddenError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/tx/init:
        post:
            tags:
                - tx
            summary: Start transaction confirmation flow
            operationId: tx#txInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TxInitRequestBody'
                        example:
                            nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            txPayload: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            txType: raw
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TxInit'
                            example:
                                assertionOptions:
                                    allowCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    extensions:
                                        appid: https://loalhost:8443
                                    rpId: https://localhost:8443/
                                    timeout: 5000
                                    userVerification: discouraged
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                                txId: 2a363a42-a397-4af0-b089-0935fc223017
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotFoundError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InternalServerError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/version:
        get:
            tags:
                - version
            summary: Show software version
            operationId: version#versionShow
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Version3'
                            example:
                                hash: cd243db4
                                version: 1.2.3
components:
    schemas:
        Application:
            type: object
            properties:
                id:
                    type: string
                    description: Unique application id
                    example: 7e8fbee6-7d23-4d2c-a66b-e92fe21212a7
                token:
                    type: string
                    description: App authorization token signed with application key.
                    example: hEonOXevUMgNDYQWCYQQog==
            description: |-
                Application making the request. It contains additional info about the caller
                to distinguish between tenants.
            example:
                id: 2a363a42-a397-4af0-b089-0935fc223017
            required:
                - id
        AuthCode:
            type: object
            properties:
                code:
                    type: string
                    description: Generated code
                    example: "123456"
                expiresAt:
                    type: string
                    description: Expiration time of the code
                    example: "2021-01-01T00:00:00Z"
            description: Code generation result
            example:
                code: "123456"
                expiresAt: "2021-01-01T00:00:00Z"
            required:
                - code
                - expiresAt
        AuthCodeRequestSMSRequestBody:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/UserLogin'
            example:
                user:
                    username: admin@example.com
                    usernameType: email
            required:
                - user
        AuthCodeVerifyRequestBody:
            type: object
            properties:
                authCode:
                    type: string
                    description: Authentication code
                    example: "123456"
                user:
                    $ref: '#/components/schemas/UserLogin'
            example:
                authCode: "123456"
                user:
                    username: admin@example.com
                    usernameType: email
            required:
                - authCode
                - user
        AuthCompleteRequestBody:
            type: object
            properties:
                assertionResult:
                    $ref: '#/components/schemas/AuthenticatorAssertionResponse'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
            example:
                assertionResult:
                    authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                    clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                    signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - assertionResult
        AuthInit:
            type: object
            properties:
                action:
                    type: string
                    description: An action to be performed by the front-end to complete the authentication flow.
                    default: proceed
                    example: proceed
                    enum:
                        - proceed
                        - crossAuth
                        - fallback
                assertionOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialRequestOptions'
                crossAuthMethods:
                    type: array
                    items:
                        type: string
                        example: otp:sms
                        enum:
                            - otp
                            - otp:sms
                            - otp:email
                    description: List of cross authentication methods in the order of preference
                    example:
                        - otp
                        - otp:sms
                        - otp:email
                fallbackMethods:
                    type: array
                    items:
                        type: string
                        example: ciam
                        enum:
                            - ciam
                    description: |-
                        The list contains available fallback methods in the order of preference. The
                        list is dynamic and shall not be cached. The default fallback mechanism is
                        the one provided by CIAM but our system may provide additional ones as well.
                        These methods may be enabled by customer via application configuration but
                        they are disabled by default. The list may be empty which means no fallback
                        is available and authentication flow shall terminate at this point.
                    default: []
                    example:
                        - ciam
                passkeyType:
                    type: string
                    description: Type of passkey supported by the client.
                    example: device
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            description: FIDO2 authentication response
            example:
                action: proceed
                assertionOptions:
                    allowCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    extensions:
                        appid: https://loalhost:8443
                    rpId: https://localhost:8443/
                    timeout: 5000
                    userVerification: Praesentium veniam sit.
                crossAuthMethods:
                    - otp
                    - otp:sms
                    - otp:email
                fallbackMethods:
                    - ciam
                passkeyType: device
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - assertionOptions
                - action
                - crossAuthMethods
                - fallbackMethods
        AuthInitRequestBody:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/Application'
                deviceInfo:
                    $ref: '#/components/schemas/DeviceInfo'
                user:
                    $ref: '#/components/schemas/UserLogin'
            example:
                app:
                    id: 2a363a42-a397-4af0-b089-0935fc223017
                deviceInfo:
                    clientName: Chrome
                    clientType: browser
                    clientVersion: 120.0.0.0
                    deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                    osArch: aarch64
                    osName: iPhone
                    osVersion: 14.2.1
                    screenHeight: 1080
                    screenWidth: 1920
                user:
                    username: admin@example.com
                    usernameType: email
            required:
                - app
                - deviceInfo
        AuthenticatorAssertionResponse:
            type: object
            properties:
                authenticatorData:
                    type: string
                    description: |-
                        A base64 encoded authenticator data structure encodes contextual bindings
                        made by the authenticator.
                    example: Quia ex reiciendis error illum.
                clientDataJSON:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        passed to the authenticator by the client in order to generate this assertion.
                        The exact JSON serialization MUST be preserved, as the hash of the serialized
                        client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId:
                    type: string
                    description: |-
                        A base64 encoded byte sequence identifying a public key credential
                        source and its authentication assertions.
                    example: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                signature:
                    type: string
                    description: Base64 encoded the raw signature returned from the authenticator.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                userHandle:
                    type: string
                    description: User handle returned from the authenticator, or null if the authenticator did not return a user handle.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            example:
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            required:
                - clientDataJSON
                - authenticatorData
                - credentialId
                - signature
        AuthenticatorSelectionCriteria:
            type: object
            properties:
                authenticatorAttachment:
                    type: string
                    description: Authenticator attachment modality
                    example: cross-platform
                    enum:
                        - platform
                        - cross-platform
                requireResidentKey:
                    type: boolean
                    description: Resident key requirement
                    default: false
                    example: true
                residentKey:
                    type: string
                    description: Resident key requirement
                    example: required
                    enum:
                        - discouraged
                        - preferred
                        - required
                userVerification:
                    type: string
                    description: User verification requirement
                    example: required
                    enum:
                        - required
                        - preferred
                        - discouraged
            example:
                authenticatorAttachment: platform
                requireResidentKey: true
                residentKey: discouraged
                userVerification: Praesentium veniam sit.
        BadRequestError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        CodeResult:
            type: object
            properties:
                code:
                    type: string
                    description: Generated code
                    example: Corrupti rem consequatur sapiente dolorum ut consequatur.
                expiresAt:
                    type: string
                    description: Expiration time of the code
                    example: Quo fugit amet laudantium qui.
            example:
                code: Quae quia.
                expiresAt: Facilis quidem quod ab doloribus et explicabo.
            required:
                - code
                - expiresAt
        CreationResult:
            type: object
            properties:
                attestationObject:
                    type: string
                    description: |-
                        Base64 encoded byte array containing an attestation object, which is opaque to,
                        and cryptographically protected against tampering by, the client.
                    example: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                authenticatorData:
                    type: string
                    description: |-
                        A base64 encoded authenticator data structure encodes contextual bindings
                        made by the authenticator.
                    example: Voluptate beatae perspiciatis quia error non minus.
                clientDataJSON:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        passed to the authenticator by the client in order to generate this credential.
                        The exact JSON serialization MUST be preserved, as the hash of the serialized
                        client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId:
                    type: string
                    description: |-
                        A base64 encoded byte sequence identifying a public key credential
                        source and its authentication assertions.
                    example: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                publicKey:
                    type: string
                    description: |-
                        Base64 encoded DER SubjectPublicKeyInfo of the new credential, or null if this is
                        not available.
                    example: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                publicKeyAlgorithm:
                    type: integer
                    example: -8
                    format: int64
                transports:
                    type: array
                    items:
                        type: string
                        description: |-
                            This enumeration defines hints as to how clients might communicate with a
                            particular authenticator in order to obtain an assertion for a specific
                            credential.
                        example: internal
                        enum:
                            - usb
                            - nfc
                            - ble
                            - internal
                            - hybrid
                            - cable
                            - smart-card
                    description: |-
                        These values are the transports that the authenticator is believed to support,
                        or an empty sequence if the information is unavailable.
                    example:
                        - internal
                        - internal
            example:
                attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                publicKeyAlgorithm: -8
                transports:
                    - internal
                    - internal
                    - internal
                    - internal
            required:
                - clientDataJSON
                - attestationObject
                - credentialId
        DeviceInfo:
            type: object
            properties:
                clientName:
                    type: string
                    description: Client name
                    default: ""
                    example: Chrome
                clientType:
                    type: string
                    description: Client type.
                    default: other
                    example: browser
                    enum:
                        - browser
                        - other
                clientVersion:
                    type: string
                    description: Client version
                    default: ""
                    example: 120.0.0.0
                deviceId:
                    type: string
                    description: An unique device identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                osArch:
                    type: string
                    description: OS architecture
                    default: ""
                    example: aarch64
                osName:
                    type: string
                    description: OS name
                    default: ""
                    example: iPhone
                osVersion:
                    type: string
                    description: OS version
                    default: ""
                    example: 14.2.1
                screenHeight:
                    type: integer
                    description: Screen height in pixels
                    default: 0
                    example: 1080
                    format: int64
                screenWidth:
                    type: integer
                    description: Screen width in pixels
                    default: 0
                    example: 1920
                    format: int64
            description: |-
                Information about the device. All of these attributes are optional and should
                be provided on best effort basis. If provide, they will be taken into
                consideration in order to improve user experience.
            example:
                clientName: Chrome
                clientType: browser
                clientVersion: 120.0.0.0
                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                osArch: aarch64
                osName: iPhone
                osVersion: 14.2.1
                screenHeight: 1080
                screenWidth: 1920
        ForbiddenError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        GrantCreateRequestBody:
            type: object
            properties:
                grants:
                    type: array
                    items:
                        type: string
                        example: reg:write
                        enum:
                            - passkey:read
                            - passkey:write
                            - profile:read
                            - profile:write
                            - reg:write
                            - auth:write
                    description: List of requested grants
                    example:
                        - passkey:read
                        - passkey:write
                        - reg:write
                username:
                    type: string
                    description: User identifier
                    example: testUser
            example:
                grants:
                    - passkey:read
                    - passkey:write
                    - reg:write
                username: testUser
            required:
                - grants
        GrantCreateResponseBody:
            type: object
            properties:
                token:
                    type: string
                    description: Base64 encoded authorization token
                    example: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
            example:
                token: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
            required:
                - token
        InternalServerError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        JWT:
            type: object
            properties:
                deviceID:
                    type: string
                    description: Device ID
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                jwtAccess:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            example:
                deviceID: 2a363a42-a397-4af0-b089-0935fc223017
                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            required:
                - jwtAccess
        NotFoundError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        Passkey:
            type: object
            properties:
                createdAt:
                    type: string
                    description: Timestamp in RFC3339 format.
                    example: 2023-06-15 13:29:41 EDT
                    format: date-time
                credentialSynced:
                    type: boolean
                    description: Credential available on multiple devices
                    default: false
                    example: true
                device:
                    type: string
                    description: Device type
                    example: iPhone SE
                id:
                    type: string
                    description: PassKey ID
                    example: eb385800-d35e-4108-9b49-48010731cd37
                name:
                    type: string
                    description: Name of the passkey
                    example: My Phone
            example:
                createdAt: 2023-06-15 13:29:41 EDT
                credentialSynced: false
                device: iPhone SE
                id: eb385800-d35e-4108-9b49-48010731cd37
                name: My Phone
            required:
                - id
                - name
                - device
                - createdAt
        PasskeyCollection:
            type: array
            items:
                $ref: '#/components/schemas/Passkey'
            example:
                - createdAt: 2023-06-15 13:29:41 EDT
                  credentialSynced: false
                  device: iPhone SE (2nd Gen)
                  id: eb385800-d35e-4108-9b49-48010731cd37
                  name: My Phone
                - createdAt: 2023-06-15 13:29:41 EDT
                  credentialSynced: true
                  device: MacBook Pro (Google Chrome)
                  id: 1b385800-d35e-4108-9b49-48010731cd37
                  name: My Laptop
                - createdAt: 2023-06-15 13:29:41 EDT
                  credentialSynced: false
                  device: MacBook Pro
                  id: ab385800-d35e-4108-9b49-48010731cd37
                  name: My Tablet
        PasskeyOptions:
            type: object
            properties:
                conditionalCreate:
                    type: boolean
                    description: Flag to allow conditional creation
                    default: false
                    example: true
            example:
                conditionalCreate: false
            required:
                - conditionalCreate
        PasskeyRenameRequestBody:
            type: object
            properties:
                name:
                    type: string
                    description: Internal passkey identifier
                    example: My iPhone SE
            example:
                name: My iPhone SE
            required:
                - name
        ProfileEmailUpdateRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: Email address
                    example: luke.skywalker@tatuin.com
                requestVerification:
                    type: boolean
                    description: |-
                        Whether to update the email address immediately or send an authorization code
                        to verify.
                    default: true
                    example: false
            example:
                email: luke.skywalker@tatuin.com
                requestVerification: true
            required:
                - email
        ProfilePhoneUpdateRequestBody:
            type: object
            properties:
                messagingConsent:
                    type: boolean
                    description: |-
                        Whether the user consents to receiving SMS messages on this number. The phone
                        will not be used for sending messages if no consent is provided.
                    default: false
                    example: true
                phoneNumber:
                    type: string
                    description: Phone number
                    example: "+14161234567"
                requestVerification:
                    type: boolean
                    description: |-
                        Whether to update the phone number immediately or send an authorization code
                        to verify. This method will fail if verification is requested but no consent
                        is provided.
                    default: true
                    example: true
            example:
                messagingConsent: true
                phoneNumber: "+14161234567"
                requestVerification: true
            required:
                - phoneNumber
        ProfilePhoneVerifyRequestBody:
            type: object
            properties:
                authCode:
                    type: string
                    description: Verification code
                    example: "123456"
                username:
                    type: string
                    description: Username associated with the code
                    example: user@example.com
            example:
                authCode: "123456"
                username: user@example.com
            required:
                - authCode
                - username
        PubKeyCredentialDescriptor:
            type: object
            properties:
                id:
                    type: string
                    description: Base64 encoded byte array of the public key identifier.
                    example: AyQBkTLAPWaLl6HtE3Oh6ovqkspSidX8DA9fYQB6DX4=
                transports:
                    type: array
                    items:
                        type: string
                        description: |-
                            This enumeration defines hints as to how clients might communicate with a
                            particular authenticator in order to obtain an assertion for a specific
                            credential.
                        example: internal
                        enum:
                            - usb
                            - nfc
                            - ble
                            - internal
                            - hybrid
                            - cable
                            - smart-card
                    example:
                        - internal
                        - internal
                        - internal
                        - internal
                type:
                    type: string
                    description: The valid credential types.
                    example: public-key
                    enum:
                        - public-key
            example:
                id: AyQBkTLAPWaLl6HtE3Oh6ovqkspSidX8DA9fYQB6DX4=
                transports:
                    - internal
                    - internal
                type: Quo ad.
            required:
                - type
                - id
        PublicKeyCredential:
            type: object
            properties:
                id:
                    type: string
                    description: |-
                        This base64 encoded byte array contains the credential ID
                        of the public key credential the caller is referring to.
                    example: RIiL8/kVzPwGRig3gVvlAGzWqNLb2kG56XSH7u1tXR4=
                transport:
                    type: string
                    description: |-
                        This enumeration defines hints as to how clients might communicate with a
                        particular authenticator in order to obtain an assertion for a specific
                        credential.
                    example: internal
                    enum:
                        - usb
                        - nfc
                        - ble
                        - internal
                        - hybrid
                        - cable
                        - smart-card
                type:
                    type: string
                    description: |-
                        The type of the public key credential the caller is referring to.
                        The value SHOULD be a member of PublicKeyCredentialType but client
                        platforms MUST ignore any PublicKeyCredentialDescriptor with an unknown
                        type.
                    default: public-key
                    example: public-key
                    enum:
                        - public-key
            example:
                id: RIiL8/kVzPwGRig3gVvlAGzWqNLb2kG56XSH7u1tXR4=
                transport: internal
                type: public-key
            required:
                - id
        PublicKeyCredentialCreationOptions:
            type: object
            properties:
                attestation:
                    type: string
                    example: indirect
                    enum:
                        - none
                        - indirect
                        - direct
                        - enterprise
                authenticatorSelection:
                    $ref: '#/components/schemas/AuthenticatorSelectionCriteria'
                challenge:
                    type: string
                    description: |-
                        This base64 encoded byte array represents a challenge that
                        the selected authenticator signs, along with other data, when
                        producing an authentication assertion.
                    example: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                excludeCredentials:
                    type: array
                    items:
                        $ref: '#/components/schemas/PubKeyCredentialDescriptor'
                    description: |-
                        List of credentials to limit the creation of multiple credentials for the same
                        account on a single authenticator. The client is requested to return an error
                        if the new credential would be created on an authenticator that also contains
                        one of the credentials enumerated in this parameter.
                    example:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                extensions:
                    type: object
                    description: Additional parameters requesting processing by the client and authenticator.
                    example:
                        appid: https://loalhost:8443
                    additionalProperties: true
                pubKeyCredParams:
                    type: array
                    items:
                        $ref: '#/components/schemas/PublicKeyCredentialParameters'
                    description: |-
                        This member contains information about the desired properties of the credential
                        to be created. The sequence is ordered from most preferred to least preferred.
                        The client makes a best-effort to create the most preferred credential that it
                        can.
                    example:
                        - alg: -7
                          type: public-key
                        - alg: -257
                          type: public-key
                rp:
                    $ref: '#/components/schemas/PublicKeyCredentialRpEntity'
                timeout:
                    type: integer
                    description: |-
                        This OPTIONAL member specifies a time, in milliseconds,
                        that the caller is willing to wait for the call to complete. The
                        value is treated as a hint, and MAY be overridden by the client.
                    example: 10000
                    format: int64
                user:
                    $ref: '#/components/schemas/PublicKeyCredentialUserEntity'
            example:
                attestation: Et quas harum odit ea.
                authenticatorSelection:
                    authenticatorAttachment: platform
                    requireResidentKey: true
                    residentKey: required
                    userVerification: preferred
                challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                excludeCredentials:
                    - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                      transports:
                        - usb
                        - internal
                      type: public-key
                    - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                      type: public-key
                extensions:
                    appid: https://loalhost:8443
                pubKeyCredParams:
                    - alg: -7
                      type: public-key
                    - alg: -257
                      type: public-key
                rp:
                    id: api.loginid.io
                    name: Login ID Inc.
                timeout: 10000
                user:
                    displayName: System Administrator
                    id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                    name: admin
            required:
                - rp
                - user
                - challenge
                - pubKeyCredParams
        PublicKeyCredentialParameters:
            type: object
            properties:
                alg:
                    type: integer
                    description: |-
                        A cryptographic signature algorithm with which the newly generated credential
                        will be used, and thus also the type of asymmetric key pair to be generated,
                        e.g., RSA or Elliptic Curve.
                    example: -257
                    enum:
                        - -7
                        - -35
                        - -36
                        - -257
                        - -8
                    format: int64
                type:
                    type: string
                    description: The valid credential types.
                    example: public-key
                    enum:
                        - public-key
            description: Additional parameters when creating a new credential.
            example:
                alg: -257
                type: Quo ad.
        PublicKeyCredentialRequestOptions:
            type: object
            properties:
                allowCredentials:
                    type: array
                    items:
                        $ref: '#/components/schemas/PubKeyCredentialDescriptor'
                    description: |-
                        A list of PublicKeyCredentialDescriptor objects representing public key
                        credentials acceptable to the caller, in descending order of the caller’s
                        preference (the first item in the list is the most preferred credential,
                        and so on down the list).
                    example:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                challenge:
                    type: string
                    description: |-
                        This base64 encoded byte array represents a challenge that the selected
                        authenticator signs, along with other data, when producing an authentication
                        assertion.
                    example: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                extensions:
                    type: object
                    description: |-
                        Additional parameters requesting additional processing by the client and
                        authenticator. For example, if transaction confirmation is sought from the
                        user, then the prompt string might be included as an extension.
                    example:
                        appid: https://loalhost:8443
                    additionalProperties: true
                rpId:
                    type: string
                    description: |-
                        The relying party identifier claimed by the caller. If omitted, its value will
                        be the CredentialsContainer object’s relevant settings object's origin's
                        effective domain.
                    example: https://localhost:8443/
                timeout:
                    type: integer
                    description: |-
                        Specifies a time, in milliseconds, that the caller is willing
                        to wait for the call to complete. The value is treated as a
                        hint, and MAY be overridden by the client.
                    example: 5000
                    format: int64
                userVerification:
                    type: string
                    description: User verification requirement
                    example: preferred
                    enum:
                        - required
                        - preferred
                        - discouraged
            example:
                allowCredentials:
                    - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                      transports:
                        - usb
                        - internal
                      type: public-key
                    - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                      type: public-key
                challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                extensions:
                    appid: https://loalhost:8443
                rpId: https://localhost:8443/
                timeout: 5000
                userVerification: Praesentium veniam sit.
            required:
                - challenge
        PublicKeyCredentialRpEntity:
            type: object
            properties:
                id:
                    type: string
                    description: A unique identifier for the Relying Party entity, which sets the RP ID.
                    example: api.loginid.io
                name:
                    type: string
                    description: Relaying party name
                    example: Login ID Inc.
            description: Data about the Relying Party responsible for the request.
            example:
                id: api.loginid.io
                name: Login ID Inc.
            required:
                - name
        PublicKeyCredentialUserEntity:
            type: object
            properties:
                displayName:
                    type: string
                    example: System Administrator
                id:
                    type: string
                    example: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                name:
                    type: string
                    example: admin
            description: Data about the user account for which the Relying Party is requesting attestation
            example:
                displayName: System Administrator
                id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                name: admin
            required:
                - name
                - displayName
                - id
        RegCompleteRequestBody:
            type: object
            properties:
                creationResult:
                    $ref: '#/components/schemas/CreationResult'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
            example:
                creationResult:
                    attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                    authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                    clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                    publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                    publicKeyAlgorithm: -8
                    transports:
                        - hybrid
                        - cable
                        - internal
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - creationResult
        RegInit:
            type: object
            properties:
                action:
                    type: string
                    description: An action to be performed by the front-end to complete the registration flow.
                    default: proceed
                    example: proceed
                    enum:
                        - proceed
                        - signIn
                        - fail
                registrationRequestOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialCreationOptions'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            description: FIDO2 registration response
            example:
                action: proceed
                registrationRequestOptions:
                    attestation: Et quas harum odit ea.
                    authenticatorSelection:
                        authenticatorAttachment: platform
                        requireResidentKey: true
                        residentKey: required
                        userVerification: preferred
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    excludeCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    extensions:
                        appid: https://loalhost:8443
                    pubKeyCredParams:
                        - alg: -7
                          type: public-key
                        - alg: -257
                          type: public-key
                    rp:
                        id: api.loginid.io
                        name: Login ID Inc.
                    timeout: 10000
                    user:
                        displayName: System Administrator
                        id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                        name: admin
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - registrationRequestOptions
                - action
        RegInitRequestBody:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/Application'
                deviceInfo:
                    $ref: '#/components/schemas/DeviceInfo'
                passkeyOptions:
                    $ref: '#/components/schemas/PasskeyOptions'
                session:
                    type: string
                    description: |-
                        An opaque object containing user data. It is used in place of "user" attribute
                        for creating passkeys for pre-authorized users ("user" attribute is ignored if
                        session is present). The value of this attribute is generated by this service
                        and require backend integration for obtaining it. This value is time sensitive
                        and has rather short expiry.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                user:
                    $ref: '#/components/schemas/User'
            example:
                app:
                    id: 2a363a42-a397-4af0-b089-0935fc223017
                deviceInfo:
                    clientName: Chrome
                    clientType: browser
                    clientVersion: 120.0.0.0
                    deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                    osArch: aarch64
                    osName: iPhone
                    osVersion: 14.2.1
                    screenHeight: 1080
                    screenWidth: 1920
                passkeyOptions:
                    conditionalCreate: false
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                user:
                    displayName: System Administrator
                    username: admin@example.com
                    usernameType: email
            required:
                - app
                - deviceInfo
        ResultKey:
            type: object
            properties:
                alg:
                    type: string
                    description: Algorithm used
                    example: ES256
                crv:
                    type: string
                    description: Curve used
                    example: P-256
                key_ops:
                    type: array
                    items:
                        type: string
                        example: Aliquam laudantium exercitationem magni itaque.
                    description: Key operations
                    example:
                        - verify
                kid:
                    type: string
                    description: Key Identifier
                    example: unique-key-id
                kty:
                    type: string
                    description: Key Type
                    example: EC
                use:
                    type: string
                    description: Intended use of the key
                    example: sig
                x:
                    type: string
                    description: X coordinate of the elliptic curve public key
                    example: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                "y":
                    type: string
                    description: Y coordinate of the elliptic curve public key
                    example: y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
            description: JWK
            example:
                alg: ES256
                crv: P-256
                key_ops:
                    - verify
                kid: unique-key-id
                kty: EC
                use: sig
                x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
            required:
                - kty
                - use
                - key_ops
                - alg
                - kid
        TokenVerifyRequestBody:
            type: object
            properties:
                jwtAccess:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            example:
                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            required:
                - jwtAccess
        TxComplete:
            type: object
            properties:
                authCred:
                    $ref: '#/components/schemas/Passkey'
                credentialId:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                token:
                    type: string
                    description: Authorization token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            description: Transaction Confirmation Complete response
            example:
                authCred:
                    createdAt: 2023-06-15 13:29:41 EDT
                    credentialSynced: true
                    device: iPhone SE
                    id: eb385800-d35e-4108-9b49-48010731cd37
                    name: My Phone
                credentialId: 2a363a42-a397-4af0-b089-0935fc223017
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            required:
                - credentialId
                - token
        TxCompleteRequestBody:
            type: object
            properties:
                authenticatorData:
                    type: string
                    description: This attribute contains the authenticator data returned by the authenticator.
                    example: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientData:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        							passed to the authenticator by the client in order to generate this assertion.
                        							The exact JSON serialization MUST be preserved, as the hash of the serialized
                        							client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                keyHandle:
                    type: string
                    description: Identified of the passkey credential.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                signature:
                    type: string
                    description: Base64 encoded the raw signature returned from the authenticator.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            example:
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientData: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                keyHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            required:
                - session
                - keyHandle
                - clientData
                - authenticatorData
                - signature
        TxInit:
            type: object
            properties:
                assertionOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialRequestOptions'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                txId:
                    type: string
                    description: Internal transaction identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
            description: Transaction Confirmation Init response
            example:
                assertionOptions:
                    allowCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    extensions:
                        appid: https://loalhost:8443
                    rpId: https://localhost:8443/
                    timeout: 5000
                    userVerification: Praesentium veniam sit.
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txId: 2a363a42-a397-4af0-b089-0935fc223017
            required:
                - txId
                - session
                - assertionOptions
        TxInitRequestBody:
            type: object
            properties:
                nonce:
                    type: string
                    description: Random string
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txPayload:
                    type: string
                    description: Payload of transaction
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                txType:
                    type: string
                    description: Type of transaction
                    example: raw
                username:
                    type: string
                    description: Username of user
                    example: testUser
            example:
                nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txPayload: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                txType: raw
                username: testUser
            required:
                - username
                - txPayload
                - txType
                - nonce
        UnauthorizedError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        User:
            type: object
            properties:
                displayName:
                    type: string
                    description: Display Name
                    example: System Administrator
                username:
                    type: string
                    description: Username
                    example: user01
                usernameType:
                    type: string
                    description: Username type
                    default: other
                    example: email
                    enum:
                        - email
                        - phone
                        - other
            example:
                displayName: System Administrator
                username: admin@example.com
                usernameType: email
            required:
                - username
                - usernameType
        UserLogin:
            type: object
            properties:
                username:
                    type: string
                    description: Username
                    example: user01
                usernameType:
                    type: string
                    description: Username type
                    default: other
                    example: email
                    enum:
                        - email
                        - phone
                        - other
            example:
                username: admin@example.com
                usernameType: email
            required:
                - username
        Version:
            type: object
            properties:
                hash:
                    type: string
                    description: Version hash
                    example: cd243db4
                version:
                    type: string
                    description: Software version
                    example: 1.2.3
            example:
                hash: cd243db4
                version: 1.2.3
            required:
                - version
        Version2:
            type: object
            properties:
                hash:
                    type: string
                    description: Version hash
                    example: cd243db4
                version:
                    type: string
                    description: Software version
                    example: 1.2.3
            description: Version
            example:
                hash: cd243db4
                version: 1.2.3
            required:
                - version
        Version3:
            type: object
            properties:
                hash:
                    type: string
                    description: Version hash
                    example: cd243db4
                version:
                    type: string
                    description: Software version
                    example: 1.2.3
            example:
                hash: cd243db4
                version: 1.2.3
            required:
                - version
        WellKnownJwks:
            type: object
            properties:
                keys:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultKey'
                    example:
                        - alg: ES256
                          crv: P-256
                          key_ops:
                            - verify
                          kid: unique-key-id
                          kty: EC
                          use: sig
                          x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                          "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
                        - alg: ES256
                          crv: P-256
                          key_ops:
                            - verify
                          kid: unique-key-id
                          kty: EC
                          use: sig
                          x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                          "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
            example:
                keys:
                    - alg: ES256
                      crv: P-256
                      key_ops:
                        - verify
                      kid: unique-key-id
                      kty: EC
                      use: sig
                      x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                      "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
                    - alg: ES256
                      crv: P-256
                      key_ops:
                        - verify
                      kid: unique-key-id
                      kty: EC
                      use: sig
                      x: -a4DlQ0kMffMB1wZJSjNAA1YTVB0dXrTUGszywNy-e4
                      "y": y5gcJVgSq7B5hr7vN1rbNaGQ3mqMN7soz5Ua1SqzWGw
    securitySchemes:
        apiKey_header_Authorization:
            type: apiKey
            description: Secures endpoint by requiring an API key.
            name: Authorization
            in: header
        jwt_header_Authorization:
            type: http
            scheme: bearer
tags:
    - name: mgmt
      description: Management API
    - name: passkeys
      description: FIDO2 pass-key management
    - name: profile
      description: User Profile API
    - name: auth
      description: FIDO2 authentication flow
    - name: reg
      description: FIDO2 registration flow
    - name: tx
      description: FIDO2 transaction confirmation flow
    - name: .well-known
      description: FIDO2 well-known endpoints
    - name: version
      description: Get Version
