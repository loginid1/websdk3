openapi: 3.0.3
info:
    title: FIDO2 API
    description: RESTful API for handling WebAuthn logic with support for FIDO2 flows with passkeys.
    version: "2.0"
servers:
    - url: https://api.loginid.io/fido2/v2
paths:
    /fido2/v2/auth/code:
        post:
            tags:
                - auth
            summary: Authenticate using a code
            operationId: auth#authCode
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCodeRequestBody'
                        example:
                            code: "123456"
                            user:
                                displayName: System Administrator
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                code:
                                    code: Nam et quisquam exercitationem quibusdam.
                                    expiresAt: Ut et.
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/complete:
        post:
            tags:
                - auth
            summary: Complete WebAuthn registration
            operationId: auth#authComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthCompleteRequestBody'
                        example:
                            assertionResult:
                                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                code:
                                    code: Nam et quisquam exercitationem quibusdam.
                                    expiresAt: Ut et.
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/auth/init:
        post:
            tags:
                - auth
            summary: Start WebAuthn registration flow
            operationId: auth#authInit
            parameters:
                - name: User-Agent
                  in: header
                  description: Raw user-agent header as set by a browser
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Raw user-agent header as set by a browser
                    example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
                  example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthInitRequestBody'
                        example:
                            app:
                                id: 2a363a42-a397-4af0-b089-0935fc223017
                            codePurpose: tempAuth
                            deviceInfo:
                                clientName: Chrome
                                clientType: browser
                                clientVersion: 120.0.0.0
                                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                                osArch: aarch64
                                osName: iPhone
                                osVersion: 14.2.1
                                screenHeight: 1080
                                screenWidth: 1920
                            user:
                                displayName: System Administrator
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthInit'
                            example:
                                assertionOptions:
                                    allowCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    extensions:
                                        appid: https://loalhost:8443
                                    rpId: https://localhost:8443/
                                    timeout: 5000
                                    userVerification: discouraged
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/code:
        post:
            tags:
                - code
            summary: Generate a short code
            description: Generate a code for temporary access or adding a new device
            operationId: code#generateCode
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateCodeRequestBody'
                        example:
                            purpose: tempAuth
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CodeGenerate'
                            example:
                                code: "123456"
                                expiresAt: "2021-01-01T00:00:00Z"
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - user:code
    /fido2/v2/email/add/init:
        post:
            tags:
                - email
            summary: Send email to add email number to profile
            operationId: email#emailAddInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailAddInitRequestBody'
                        example:
                            email: test@loginid.io
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailAuthInitResponseBody'
                            example:
                                expiresAt: 2023-06-15 13:29:41 EDT
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - user:write
    /fido2/v2/email/auth/init:
        post:
            tags:
                - email
            summary: Send email to authenticate into account
            operationId: email#emailAuthInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailAuthInitRequestBody'
                        example:
                            email: test@loginid.io
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailAuthInitResponseBody'
                            example:
                                expiresAt: 2023-06-15 13:29:41 EDT
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/email/verify:
        post:
            tags:
                - email
            summary: Verify Email OTP
            operationId: email#emailVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailVerifyRequestBody'
                        example:
                            code: "123456"
                            purpose: tempAuth
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                code:
                                    code: Nam et quisquam exercitationem quibusdam.
                                    expiresAt: Ut et.
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/mgmt/grant:
        post:
            tags:
                - mgmt
            summary: Create an authorization token for use with /reg/init call
            operationId: mgmt#grantCreate
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GrantCreateRequestBody'
                        example:
                            grant: passkey:create
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GrantCreateResponseBody'
                            example:
                                token: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/mgmt/token/verify:
        post:
            tags:
                - mgmt
            summary: Validate JWT Access Token
            operationId: mgmt#tokenVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TokenVerifyRequestBody'
                        example:
                            jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/mgmt/user/{id}:
        delete:
            tags:
                - mgmt
            summary: Delete a user and all associated passkey
            operationId: mgmt#userDelete
            parameters:
                - name: id
                  in: path
                  description: Internal user identifier
                  required: true
                  schema:
                    type: string
                    description: Internal user identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - apiKey_header_Authorization: []
    /fido2/v2/passkeys:
        get:
            tags:
                - passkeys
            summary: List passkeys
            operationId: passkeys#passkeysList
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PasskeyCollection'
                            example:
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  device: iPhone SE (2nd Gen)
                                  id: eb385800-d35e-4108-9b49-48010731cd37
                                  name: My Phone
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  device: MacBook Pro (Google Chrome)
                                  id: 1b385800-d35e-4108-9b49-48010731cd37
                                  name: My Laptop
                                - createdAt: 2023-06-15 13:29:41 EDT
                                  device: MacBook Pro
                                  id: ab385800-d35e-4108-9b49-48010731cd37
                                  name: My Tablet
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:read
    /fido2/v2/passkeys/{id}:
        delete:
            tags:
                - passkeys
            summary: Delete passkey
            operationId: passkeys#passkeyDelete
            parameters:
                - name: id
                  in: path
                  description: Internal passkey identifier
                  required: true
                  schema:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:write
        put:
            tags:
                - passkeys
            summary: Rename passkey
            operationId: passkeys#passkeyRename
            parameters:
                - name: id
                  in: path
                  description: Internal passkey identifier
                  required: true
                  schema:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                  example: 2a363a42-a397-4af0-b089-0935fc223017
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PasskeyRenameRequestBody'
                        example:
                            name: My iPhone SE
            responses:
                "204":
                    description: No Content response.
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:write
    /fido2/v2/phone/add/init:
        post:
            tags:
                - phone
            summary: Send SMS to add phone number to profile
            operationId: phone#phoneAddInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PhoneAddInitRequestBody'
                        example:
                            phoneNumber: "+14161234567"
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailAuthInitResponseBody'
                            example:
                                expiresAt: 2023-06-15 13:29:41 EDT
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - user:write
    /fido2/v2/phone/auth/init:
        post:
            tags:
                - phone
            summary: Send SMS to authenticate into account
            operationId: phone#phoneAuthInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PhoneAuthInitRequestBody'
                        example:
                            phoneNumber: "+14161234567"
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmailAuthInitResponseBody'
                            example:
                                expiresAt: 2023-06-15 13:29:41 EDT
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/phone/verify:
        post:
            tags:
                - phone
            summary: Verify SMS OTP
            operationId: phone#phoneVerify
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmailVerifyRequestBody'
                        example:
                            code: "123456"
                            purpose: addCred
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                code:
                                    code: Nam et quisquam exercitationem quibusdam.
                                    expiresAt: Ut et.
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "404":
                    description: 'NotFound: Not Found response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/reg/complete:
        post:
            tags:
                - reg
            summary: Complete WebAuthn registration flow
            operationId: reg#regComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegCompleteRequestBody'
                        example:
                            creationResult:
                                attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                                publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                                publicKeyAlgorithm: -8
                                transports:
                                    - nfc
                                    - nfc
                                    - internal
                                    - internal
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWT'
                            example:
                                code:
                                    code: Nam et quisquam exercitationem quibusdam.
                                    expiresAt: Ut et.
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/reg/init:
        post:
            tags:
                - reg
            summary: Start WebAuthn registration flow
            operationId: reg#regInit
            parameters:
                - name: User-Agent
                  in: header
                  description: Raw user-agent header as set by a browser
                  allowEmptyValue: true
                  schema:
                    type: string
                    description: Raw user-agent header as set by a browser
                    example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
                  example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegInitRequestBody'
                        example:
                            app:
                                id: 2a363a42-a397-4af0-b089-0935fc223017
                            deviceInfo:
                                clientName: Chrome
                                clientType: browser
                                clientVersion: 120.0.0.0
                                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                                osArch: aarch64
                                osName: iPhone
                                osVersion: 14.2.1
                                screenHeight: 1080
                                screenWidth: 1920
                            mfa:
                                - fido2
                                - email
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            user:
                                displayName: System Administrator
                                username: admin@example.com
                                usernameType: email
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegInit'
                            example:
                                registrationRequestOptions:
                                    attestation: direct
                                    authenticatorSelection:
                                        authenticatorAttachment: platform
                                        requireResidentKey: true
                                        residentKey: required
                                        userVerification: preferred
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    excludeCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    extensions:
                                        appid: https://loalhost:8443
                                    pubKeyCredParams:
                                        - alg: -7
                                          type: public-key
                                        - alg: -257
                                          type: public-key
                                    rp:
                                        id: api.loginid.io
                                        name: Login ID Inc.
                                    timeout: 10000
                                    user:
                                        displayName: System Administrator
                                        id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                                        name: admin
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "401":
                    description: 'Unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
            security:
                - jwt_header_Authorization:
                    - passkey:write
    /fido2/v2/tx/complete:
        post:
            tags:
                - tx
            summary: Complete transaction confirmation
            operationId: tx#txComplete
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TxCompleteRequestBody'
                        example:
                            authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                            clientData: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            keyHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TxComplete'
                            example:
                                authCred:
                                    createdAt: 2023-06-15 13:29:41 EDT
                                    device: iPhone SE
                                    id: eb385800-d35e-4108-9b49-48010731cd37
                                    name: My Phone
                                credentialId: 2a363a42-a397-4af0-b089-0935fc223017
                                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                                lNonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                                nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                                txHash: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                                txId: 2a363a42-a397-4af0-b089-0935fc223017
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "403":
                    description: 'Forbidden: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/tx/init:
        post:
            tags:
                - tx
            summary: Start transaction confirmation flow
            operationId: tx#txInit
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TxInitRequestBody'
                        example:
                            nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                            txPayload: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                            txType: raw
                            username: testUser
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TxInit'
                            example:
                                assertionOptions:
                                    allowCredentials:
                                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                                          transports:
                                            - usb
                                            - internal
                                          type: public-key
                                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                                          type: public-key
                                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                                    extensions:
                                        appid: https://loalhost:8443
                                    rpId: https://localhost:8443/
                                    timeout: 5000
                                    userVerification: discouraged
                                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                                txId: 2a363a42-a397-4af0-b089-0935fc223017
                "400":
                    description: 'BadRequest: Bad Request response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
                "500":
                    description: 'InternalServerError: Internal Server Error response.'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                            example:
                                msg: A serious error
                                msgCode: serious_error
    /fido2/v2/version:
        get:
            tags:
                - version
            summary: Show software version
            operationId: version#versionShow
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Version'
                            example:
                                hash: cd243db4
                                version: 1.2.3
components:
    schemas:
        Application:
            type: object
            properties:
                id:
                    type: string
                    description: Unique application id
                    example: 7e8fbee6-7d23-4d2c-a66b-e92fe21212a7
                token:
                    type: string
                    description: App authorization token signed with application key.
                    example: hEonOXevUMgNDYQWCYQQog==
            description: |-
                Application making the request. It contains additional info about the caller
                to distinguish between tenants.
            example:
                id: 2a363a42-a397-4af0-b089-0935fc223017
            required:
                - id
        AuthCodeRequestBody:
            type: object
            properties:
                code:
                    type: string
                    description: Code issued to the user
                    example: "123456"
                user:
                    $ref: '#/components/schemas/User'
            example:
                code: "123456"
                user:
                    displayName: System Administrator
                    username: admin@example.com
                    usernameType: email
            required:
                - user
                - code
        AuthCompleteRequestBody:
            type: object
            properties:
                assertionResult:
                    $ref: '#/components/schemas/AuthenticatorAssertionResponse'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
            example:
                assertionResult:
                    authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                    clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                    signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - assertionResult
        AuthInit:
            type: object
            properties:
                assertionOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialRequestOptions'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            example:
                assertionOptions:
                    allowCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    extensions:
                        appid: https://loalhost:8443
                    rpId: https://localhost:8443/
                    timeout: 5000
                    userVerification: discouraged
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - assertionOptions
        AuthInitRequestBody:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/Application'
                codePurpose:
                    type: string
                    example: addCred
                    enum:
                        - tempAuth
                        - addCred
                deviceInfo:
                    $ref: '#/components/schemas/DeviceInfo'
                user:
                    $ref: '#/components/schemas/User'
            example:
                app:
                    id: 2a363a42-a397-4af0-b089-0935fc223017
                codePurpose: tempAuth
                deviceInfo:
                    clientName: Chrome
                    clientType: browser
                    clientVersion: 120.0.0.0
                    deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                    osArch: aarch64
                    osName: iPhone
                    osVersion: 14.2.1
                    screenHeight: 1080
                    screenWidth: 1920
                user:
                    displayName: System Administrator
                    username: admin@example.com
                    usernameType: email
            required:
                - app
                - deviceInfo
        AuthenticatorAssertionResponse:
            type: object
            properties:
                authenticatorData:
                    type: string
                    description: This attribute contains the authenticator data returned by the authenticator.
                    example: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        passed to the authenticator by the client in order to generate this assertion.
                        The exact JSON serialization MUST be preserved, as the hash of the serialized
                        client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId:
                    type: string
                    description: |-
                        A base64 encoded byte sequence identifying a public key credential
                        source and its authentication assertions.
                    example: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                signature:
                    type: string
                    description: Base64 encoded the raw signature returned from the authenticator.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                userHandle:
                    type: string
                    description: User handle returned from the authenticator, or null if the authenticator did not return a user handle.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            example:
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                userHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            required:
                - clientDataJSON
                - authenticatorData
                - credentialId
                - signature
        AuthenticatorSelectionCriteria:
            type: object
            properties:
                authenticatorAttachment:
                    type: string
                    description: Authenticator attachment modality
                    example: cross-platform
                    enum:
                        - platform
                        - cross-platform
                requireResidentKey:
                    type: boolean
                    description: Resident key requirement
                    default: false
                    example: false
                residentKey:
                    type: string
                    description: Resident key requirement
                    example: discouraged
                    enum:
                        - discouraged
                        - preferred
                        - required
                userVerification:
                    type: string
                    description: Resident key requirement
                    example: required
                    enum:
                        - required
                        - preferred
                        - discouraged
            example:
                authenticatorAttachment: cross-platform
                requireResidentKey: false
                residentKey: preferred
                userVerification: discouraged
        BadRequestError:
            type: object
            properties:
                msg:
                    type: string
                    example: A serious error
                msgCode:
                    type: string
                    example: serious_error
            example:
                msg: A serious error
                msgCode: serious_error
            required:
                - msg
                - msgCode
        CodeGenerate:
            type: object
            properties:
                code:
                    type: string
                    description: Generated code
                    example: "123456"
                expiresAt:
                    type: string
                    description: Expiration time of the code
                    example: "2021-01-01T00:00:00Z"
            example:
                code: "123456"
                expiresAt: "2021-01-01T00:00:00Z"
            required:
                - code
                - expiresAt
        CodeResult:
            type: object
            properties:
                code:
                    type: string
                    description: Generated code
                    example: Facilis quidem quod ab doloribus et explicabo.
                expiresAt:
                    type: string
                    description: Expiration time of the code
                    example: Aliquam laudantium exercitationem magni itaque.
            example:
                code: Omnis beatae voluptate aspernatur et.
                expiresAt: Sint labore temporibus incidunt libero aliquid.
            required:
                - code
                - expiresAt
        CreationResult:
            type: object
            properties:
                attestationObject:
                    type: string
                    description: |-
                        Base64 encoded byte array containing an attestation object, which is opaque to,
                        and cryptographically protected against tampering by, the client.
                    example: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                authenticatorData:
                    type: string
                    description: This attribute contains the authenticator data contained within attestationObject.
                    example: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        passed to the authenticator by the client in order to generate this credential.
                        The exact JSON serialization MUST be preserved, as the hash of the serialized
                        client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId:
                    type: string
                    description: |-
                        A base64 encoded byte sequence identifying a public key credential
                        source and its authentication assertions.
                    example: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                publicKey:
                    type: string
                    description: |-
                        Base64 encoded DER SubjectPublicKeyInfo of the new credential, or null if this is
                        not available.
                    example: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                publicKeyAlgorithm:
                    type: integer
                    example: -8
                    format: int64
                transports:
                    type: array
                    items:
                        type: string
                        example: internal
                        enum:
                            - usb
                            - nfc
                            - ble
                            - internal
                            - hybrid
                    description: |-
                        These values are the transports that the authenticator is believed to support,
                        or an empty sequence if the information is unavailable.
                    example:
                        - internal
                        - hybrid
                        - ble
            example:
                attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                publicKeyAlgorithm: -8
                transports:
                    - nfc
                    - nfc
                    - hybrid
            required:
                - clientDataJSON
                - attestationObject
                - credentialId
        DeviceInfo:
            type: object
            properties:
                clientName:
                    type: string
                    description: Client name
                    example: Chrome
                clientType:
                    type: string
                    description: Client type.
                    default: other
                    example: browser
                    enum:
                        - browser
                        - other
                clientVersion:
                    type: string
                    description: Client version
                    example: 120.0.0.0
                deviceId:
                    type: string
                    description: An unique device identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                osArch:
                    type: string
                    description: OS architecture
                    example: aarch64
                osName:
                    type: string
                    description: OS name
                    example: iPhone
                osVersion:
                    type: string
                    description: OS version
                    example: 14.2.1
                screenHeight:
                    type: integer
                    description: Screen height in pixels
                    example: 1080
                    format: int64
                screenWidth:
                    type: integer
                    description: Screen width in pixels
                    example: 1920
                    format: int64
            description: |-
                Information about the device. All of these attributes are optional and should
                be provided on best effort basis. If provide, they will be taken into
                consideration in order to improve user experience.
            example:
                clientName: Chrome
                clientType: browser
                clientVersion: 120.0.0.0
                deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                osArch: aarch64
                osName: iPhone
                osVersion: 14.2.1
                screenHeight: 1080
                screenWidth: 1920
        EmailAddInitRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: email
                    example: test@loginid.io
            example:
                email: test@loginid.io
            required:
                - email
        EmailAuthInitRequestBody:
            type: object
            properties:
                email:
                    type: string
                    description: email
                    example: test@loginid.io
                username:
                    type: string
                    description: User identifier
                    example: testUser
            example:
                email: test@loginid.io
                username: testUser
            required:
                - email
        EmailAuthInitResponseBody:
            type: object
            properties:
                expiresAt:
                    type: string
                    description: Expiration time of the verification code
                    example: 2023-06-15 13:29:41 EDT
                    format: date-time
            example:
                expiresAt: 2023-06-15 13:29:41 EDT
            required:
                - expiresAt
        EmailVerifyRequestBody:
            type: object
            properties:
                code:
                    type: string
                    description: Verification code
                    example: "123456"
                purpose:
                    type: string
                    description: Purpose of the verification code
                    example: tempAuth
                    enum:
                        - addCred
                        - tempAuth
                username:
                    type: string
                    description: User identifier
                    example: testUser
            example:
                code: "123456"
                purpose: addCred
                username: testUser
            required:
                - username
                - code
                - purpose
        GenerateCodeRequestBody:
            type: object
            properties:
                purpose:
                    type: string
                    description: Purpose of the code
                    example: addCred
                    enum:
                        - tempAuth
                        - addCred
            example:
                purpose: tempAuth
            required:
                - purpose
        GrantCreateRequestBody:
            type: object
            properties:
                grant:
                    type: string
                    description: Grant type, i.e. what operation is permitted
                    example: passkey:create
                    enum:
                        - passkey:list
                        - passkey:create
                        - passkey:update
                        - passkey:delete
                        - user:delete
                username:
                    type: string
                    description: User identifier
                    example: testUser
            example:
                grant: passkey:create
                username: testUser
            required:
                - grant
        GrantCreateResponseBody:
            type: object
            properties:
                token:
                    type: string
                    description: Base64 encoded authorization token
                    example: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
            example:
                token: oWIsYWQl6RB0cFC9jM8Hy85TmqAMyc0QqSXMsh0Fo9U=
            required:
                - token
        JWT:
            type: object
            properties:
                code:
                    $ref: '#/components/schemas/CodeResult'
                jwtAccess:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            example:
                code:
                    code: Nam et quisquam exercitationem quibusdam.
                    expiresAt: Ut et.
                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            required:
                - jwtAccess
        Passkey:
            type: object
            properties:
                createdAt:
                    type: string
                    description: Timestamp in RFC3339 format.
                    example: 2023-06-15 13:29:41 EDT
                    format: date-time
                device:
                    type: string
                    description: Device type
                    example: iPhone SE
                id:
                    type: string
                    description: PassKey ID
                    example: eb385800-d35e-4108-9b49-48010731cd37
                name:
                    type: string
                    description: Name of the passkey
                    example: My Phone
            example:
                createdAt: 2023-06-15 13:29:41 EDT
                device: iPhone SE
                id: eb385800-d35e-4108-9b49-48010731cd37
                name: My Phone
            required:
                - id
                - name
                - device
                - createdAt
        PasskeyCollection:
            type: array
            items:
                $ref: '#/components/schemas/Passkey'
            example:
                - createdAt: 2023-06-15 13:29:41 EDT
                  device: iPhone SE (2nd Gen)
                  id: eb385800-d35e-4108-9b49-48010731cd37
                  name: My Phone
                - createdAt: 2023-06-15 13:29:41 EDT
                  device: MacBook Pro (Google Chrome)
                  id: 1b385800-d35e-4108-9b49-48010731cd37
                  name: My Laptop
                - createdAt: 2023-06-15 13:29:41 EDT
                  device: MacBook Pro
                  id: ab385800-d35e-4108-9b49-48010731cd37
                  name: My Tablet
        PasskeyRenameRequestBody:
            type: object
            properties:
                name:
                    type: string
                    description: Internal passkey identifier
                    example: My iPhone SE
            example:
                name: My iPhone SE
            required:
                - name
        PhoneAddInitRequestBody:
            type: object
            properties:
                phoneNumber:
                    type: string
                    description: Phone number
                    example: "+14161234567"
            example:
                phoneNumber: "+14161234567"
            required:
                - phoneNumber
        PhoneAuthInitRequestBody:
            type: object
            properties:
                phoneNumber:
                    type: string
                    description: Phone number
                    example: "+14161234567"
                username:
                    type: string
                    description: User identifier
                    example: testUser
            example:
                phoneNumber: "+14161234567"
                username: testUser
            required:
                - username
                - phoneNumber
        PubKeyCredentialDescriptor:
            type: object
            properties:
                id:
                    type: string
                    description: Base64 encoded byte array of the public key identifier.
                    example: AyQBkTLAPWaLl6HtE3Oh6ovqkspSidX8DA9fYQB6DX4=
                transports:
                    type: array
                    items:
                        type: string
                        example: ble
                        enum:
                            - usb
                            - nfc
                            - ble
                            - internal
                            - hybrid
                    example:
                        - internal
                        - nfc
                type:
                    type: string
                    example: public-key
                    enum:
                        - public-key
            example:
                id: AyQBkTLAPWaLl6HtE3Oh6ovqkspSidX8DA9fYQB6DX4=
                transports:
                    - internal
                    - internal
                    - usb
                type: public-key
            required:
                - type
                - id
        PublicKeyCredentialCreationOptions:
            type: object
            properties:
                attestation:
                    type: string
                    description: A preference for attestation conveyance.
                    example: none
                    enum:
                        - none
                        - indirect
                        - direct
                        - enterprise
                authenticatorSelection:
                    $ref: '#/components/schemas/AuthenticatorSelectionCriteria'
                challenge:
                    type: string
                    description: |-
                        This base64 encoded byte array represents a challenge that
                        the selected authenticator signs, along with other data, when
                        producing an authentication assertion.
                    example: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                excludeCredentials:
                    type: array
                    items:
                        $ref: '#/components/schemas/PubKeyCredentialDescriptor'
                    description: |-
                        List of credentials to limit the creation of multiple credentials for the same
                        account on a single authenticator. The client is requested to return an error
                        if the new credential would be created on an authenticator that also contains
                        one of the credentials enumerated in this parameter.
                    example:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                extensions:
                    type: object
                    description: Additional parameters requesting processing by the client and authenticator.
                    example:
                        appid: https://loalhost:8443
                    additionalProperties:
                        type: string
                        example: Fuga eos repudiandae.
                pubKeyCredParams:
                    type: array
                    items:
                        $ref: '#/components/schemas/PublicKeyCredentialParameters'
                    description: |-
                        This member contains information about the desired properties of the credential
                        to be created. The sequence is ordered from most preferred to least preferred.
                        The client makes a best-effort to create the most preferred credential that it
                        can.
                    example:
                        - alg: -7
                          type: public-key
                        - alg: -257
                          type: public-key
                rp:
                    $ref: '#/components/schemas/PublicKeyCredentialRpEntity'
                timeout:
                    type: integer
                    description: |-
                        This OPTIONAL member specifies a time, in milliseconds,
                        that the caller is willing to wait for the call to complete. The
                        value is treated as a hint, and MAY be overridden by the client.
                    example: 10000
                    format: int64
                user:
                    $ref: '#/components/schemas/PublicKeyCredentialUserEntity'
            example:
                attestation: enterprise
                authenticatorSelection:
                    authenticatorAttachment: platform
                    requireResidentKey: true
                    residentKey: required
                    userVerification: preferred
                challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                excludeCredentials:
                    - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                      transports:
                        - usb
                        - internal
                      type: public-key
                    - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                      type: public-key
                extensions:
                    appid: https://loalhost:8443
                pubKeyCredParams:
                    - alg: -7
                      type: public-key
                    - alg: -257
                      type: public-key
                rp:
                    id: api.loginid.io
                    name: Login ID Inc.
                timeout: 10000
                user:
                    displayName: System Administrator
                    id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                    name: admin
            required:
                - rp
                - user
                - challenge
                - pubKeyCredParams
        PublicKeyCredentialParameters:
            type: object
            properties:
                alg:
                    type: integer
                    description: |-
                        A cryptographic signature algorithm with which the newly generated credential
                        will be used, and thus also the type of asymmetric key pair to be generated,
                        e.g., RSA or Elliptic Curve.
                    example: -7
                    enum:
                        - -7
                        - -35
                        - -36
                        - -257
                        - -8
                    format: int64
                type:
                    type: string
                    example: public-key
                    enum:
                        - public-key
            description: Additional parameters when creating a new credential.
            example:
                alg: -257
                type: public-key
        PublicKeyCredentialRequestOptions:
            type: object
            properties:
                allowCredentials:
                    type: array
                    items:
                        $ref: '#/components/schemas/PubKeyCredentialDescriptor'
                    description: |-
                        A list of PublicKeyCredentialDescriptor objects representing public key
                        credentials acceptable to the caller, in descending order of the caller’s
                        preference (the first item in the list is the most preferred credential,
                        and so on down the list).
                    example:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                challenge:
                    type: string
                    description: |-
                        This base64 encoded byte array represents a challenge that the selected
                        authenticator signs, along with other data, when producing an authentication
                        assertion.
                    example: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                extensions:
                    type: object
                    description: |-
                        Additional parameters requesting additional processing by the client and
                        authenticator. For example, if transaction confirmation is sought from the
                        user, then the prompt string might be included as an extension.
                    example:
                        appid: https://loalhost:8443
                    additionalProperties:
                        type: string
                        example: Amet laudantium qui.
                rpId:
                    type: string
                    description: |-
                        The relying party identifier claimed by the caller. If omitted, its value will
                        be the CredentialsContainer object’s relevant settings object's origin's
                        effective domain.
                    example: https://localhost:8443/
                timeout:
                    type: integer
                    description: |-
                        Specifies a time, in milliseconds, that the caller is willing
                        to wait for the call to complete. The value is treated as a
                        hint, and MAY be overridden by the client.
                    example: 5000
                    format: int64
                userVerification:
                    type: string
                    description: |-
                        The Relying Party's requirements regarding user verification for the get()
                        operation. The value SHOULD be a member of UserVerificationRequirement but
                        client platforms MUST ignore unknown values, treating an unknown value as if
                        the member does not exist. Eligible authenticators are filtered to only those
                        capable of satisfying this requirement.
                    example: preferred
                    enum:
                        - required
                        - preferred
                        - discouraged
            example:
                allowCredentials:
                    - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                      transports:
                        - usb
                        - internal
                      type: public-key
                    - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                      type: public-key
                challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                extensions:
                    appid: https://loalhost:8443
                rpId: https://localhost:8443/
                timeout: 5000
                userVerification: discouraged
            required:
                - challenge
        PublicKeyCredentialRpEntity:
            type: object
            properties:
                id:
                    type: string
                    description: A unique identifier for the Relying Party entity, which sets the RP ID.
                    example: api.loginid.io
                name:
                    type: string
                    description: Relaying party name
                    example: Login ID Inc.
            description: Data about the Relying Party responsible for the request.
            example:
                id: api.loginid.io
                name: Login ID Inc.
            required:
                - name
        PublicKeyCredentialUserEntity:
            type: object
            properties:
                displayName:
                    type: string
                    example: System Administrator
                id:
                    type: string
                    example: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                name:
                    type: string
                    example: admin
            description: Data about the user account for which the Relying Party is requesting attestation
            example:
                displayName: System Administrator
                id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                name: admin
            required:
                - name
                - displayName
                - id
        RegCompleteRequestBody:
            type: object
            properties:
                creationResult:
                    $ref: '#/components/schemas/CreationResult'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
            example:
                creationResult:
                    attestationObject: 5lvuZBkX1w7/0+XKcldttzA7vTwilEq3qnnXSq/a0...
                    authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                    clientDataJSON: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                    credentialId: 2aChi2dALRLdVP5i/zKr7yvMrP8FIy7MK4lbyUsjO...
                    publicKey: wDUH6JkyU7SMswFPjyqEvhMB5GlhtqzS1VtfM/91Y...
                    publicKeyAlgorithm: -8
                    transports:
                        - nfc
                        - nfc
                        - internal
                        - internal
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - creationResult
        RegInit:
            type: object
            properties:
                registrationRequestOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialCreationOptions'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            example:
                registrationRequestOptions:
                    attestation: direct
                    authenticatorSelection:
                        authenticatorAttachment: platform
                        requireResidentKey: true
                        residentKey: required
                        userVerification: preferred
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    excludeCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    extensions:
                        appid: https://loalhost:8443
                    pubKeyCredParams:
                        - alg: -7
                          type: public-key
                        - alg: -257
                          type: public-key
                    rp:
                        id: api.loginid.io
                        name: Login ID Inc.
                    timeout: 10000
                    user:
                        displayName: System Administrator
                        id: 5e084987-3b3d-4cd7-8b19-385f8f5e253b
                        name: admin
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
            required:
                - session
                - registrationRequestOptions
        RegInitRequestBody:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/Application'
                deviceInfo:
                    $ref: '#/components/schemas/DeviceInfo'
                mfa:
                    type: array
                    items:
                        type: string
                        example: pin
                        enum:
                            - fido2
                            - email
                            - phone
                            - password
                            - pin
                    description: |-
                        Set of authentication factors:
                        - Single factor: Username (i.e. email or phone) + FIDO2 credential;
                        - Two factor: Username + password + FIDO2 credential;
                        - Passwordless: FIDO2 discoverable credentials;
                        - Passwordless + MFA: FIDO2 discoverable credentials + PIN;
                    example:
                        - fido2
                        - email
                session:
                    type: string
                    description: |-
                        An opaque object containing user data. It is used in place of "user" attribute
                        for creating passkeys for pre-authorized users ("user" attribute is ignored if
                        session is present). The value of this attribute is generated by this service
                        and require backend integration for obtaining it. This value is time sensitive
                        and has rather short expiry.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                user:
                    $ref: '#/components/schemas/User'
            example:
                app:
                    id: 2a363a42-a397-4af0-b089-0935fc223017
                deviceInfo:
                    clientName: Chrome
                    clientType: browser
                    clientVersion: 120.0.0.0
                    deviceId: 2a363a42-a397-4af0-b089-0935fc223017
                    osArch: aarch64
                    osName: iPhone
                    osVersion: 14.2.1
                    screenHeight: 1080
                    screenWidth: 1920
                mfa:
                    - fido2
                    - email
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                user:
                    displayName: System Administrator
                    username: admin@example.com
                    usernameType: email
            required:
                - app
                - deviceInfo
        TokenVerifyRequestBody:
            type: object
            properties:
                jwtAccess:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            example:
                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
            required:
                - jwtAccess
        TxComplete:
            type: object
            properties:
                authCred:
                    $ref: '#/components/schemas/Passkey'
                credentialId:
                    type: string
                    description: Internal passkey identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
                jwtAccess:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                lNonce:
                    type: string
                    description: Random string generated by LoginID.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                nonce:
                    type: string
                    description: Random string.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txHash:
                    type: string
                    description: Computed hash value of the transaction.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txId:
                    type: string
                    description: Internal transaction identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
            example:
                authCred:
                    createdAt: 2023-06-15 13:29:41 EDT
                    device: iPhone SE
                    id: eb385800-d35e-4108-9b49-48010731cd37
                    name: My Phone
                credentialId: 2a363a42-a397-4af0-b089-0935fc223017
                jwtAccess: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                lNonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txHash: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txId: 2a363a42-a397-4af0-b089-0935fc223017
            required:
                - txId
                - credentialId
                - txHash
                - nonce
                - lNonce
                - jwtAccess
        TxCompleteRequestBody:
            type: object
            properties:
                authenticatorData:
                    type: string
                    description: This attribute contains the authenticator data returned by the authenticator.
                    example: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientData:
                    type: string
                    description: |-
                        Base64 encoded byte array which is a JSON-compatible serialization of client data
                        							passed to the authenticator by the client in order to generate this assertion.
                        							The exact JSON serialization MUST be preserved, as the hash of the serialized
                        							client data has been computed over it.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                keyHandle:
                    type: string
                    description: Identified of the passkey credential.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                signature:
                    type: string
                    description: Base64 encoded the raw signature returned from the authenticator.
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            example:
                authenticatorData: ix523n3XniH01jM4CIuOn1z0Jw6QbRATXYOsCUyQN...
                clientData: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                keyHandle: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                signature: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
            required:
                - session
                - keyHandle
                - clientData
                - authenticatorData
                - signature
        TxInit:
            type: object
            properties:
                assertionOptions:
                    $ref: '#/components/schemas/PublicKeyCredentialRequestOptions'
                session:
                    type: string
                    description: An opaque object containing session data.
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                    minLength: 16
                txId:
                    type: string
                    description: Internal transaction identifier
                    example: 2a363a42-a397-4af0-b089-0935fc223017
            example:
                assertionOptions:
                    allowCredentials:
                        - id: oAjxAhjnoQXLmRRAczwPg2E/S2zVS+DKlO6WNvgH9ys=
                          transports:
                            - usb
                            - internal
                          type: public-key
                        - id: dqJvLVzdodYfQfKPB8zgF+rtoxNx5WUgH7kFHp8SegY=
                          type: public-key
                    challenge: gUEHYYYEpkj+eNo9DOPb/17K36VT0rTUAPyM03JeoeM=
                    extensions:
                        appid: https://loalhost:8443
                    rpId: https://localhost:8443/
                    timeout: 5000
                    userVerification: discouraged
                session: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txId: 2a363a42-a397-4af0-b089-0935fc223017
            required:
                - txId
                - session
                - assertionOptions
        TxInitRequestBody:
            type: object
            properties:
                nonce:
                    type: string
                    description: Random string
                    example: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txPayload:
                    type: string
                    description: Payload of transaction
                    example: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                txType:
                    type: string
                    description: Type of transaction
                    example: raw
                username:
                    type: string
                    description: Username of user
                    example: testUser
            example:
                nonce: w5zY9tpNgePsqkTsQlNPVCR2rwUlCdhCLhVwXsN2r...
                txPayload: UxaynsCYdykyHKaA0G7IeWaBG6DGJoGFN8mbJgvRo...
                txType: raw
                username: testUser
            required:
                - username
                - txPayload
                - txType
                - nonce
        User:
            type: object
            properties:
                displayName:
                    type: string
                    description: Display Name
                    example: System Administrator
                username:
                    type: string
                    description: Username
                    example: user01
                usernameType:
                    type: string
                    description: Username type
                    default: email
                    example: email
                    enum:
                        - email
                        - phone
            example:
                displayName: System Administrator
                username: admin@example.com
                usernameType: email
            required:
                - username
                - usernameType
        Version:
            type: object
            properties:
                hash:
                    type: string
                    description: Version hash
                    example: cd243db4
                version:
                    type: string
                    description: Software version
                    example: 1.2.3
            example:
                hash: cd243db4
                version: 1.2.3
            required:
                - version
    securitySchemes:
        apiKey_header_Authorization:
            type: apiKey
            description: Secures endpoint by requiring an API key.
            name: Authorization
            in: header
        jwt_header_Authorization:
            type: http
            scheme: bearer
tags:
    - name: code
      description: Generate codes for temporary access or adding a new device
    - name: mgmt
      description: Management API
    - name: passkeys
      description: FIDO2 pass-key management
    - name: tx
      description: FIDO2 transaction confirmation flow
    - name: auth
      description: FIDO2 authentication flow
    - name: email
      description: Email Profile API
    - name: phone
      description: Phone Profile API
    - name: reg
      description: FIDO2 registration flow
    - name: version
      description: Get Version
